# Generated by Django 3.1.4 on 2023-09-14 13:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('basics', '0014_cachedeviceinfo_is_connected'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('agv', '0008_cachedevicestock_layoff_time'),
    ]

    operations = [
        migrations.CreateModel(
            name='EnvCheckLocations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('last_updated_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('delete_time', models.DateTimeField(blank=True, help_text='删除日期', null=True, verbose_name='删除日期')),
                ('delete_flag', models.BooleanField(default=False, help_text='是否删除', verbose_name='是否删除')),
                ('location_name', models.CharField(help_text='位置点名称', max_length=256, unique=True, verbose_name='位置点名称')),
                ('created_user', models.ForeignKey(blank=True, help_text='创建人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='c_agv_envchecklocations_related', related_query_name='c_agv_envchecklocationss', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('delete_user', models.ForeignKey(blank=True, help_text='删除人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='d_agv_envchecklocations_related', related_query_name='d_agv_envchecklocationss', to=settings.AUTH_USER_MODEL, verbose_name='删除人')),
                ('last_updated_user', models.ForeignKey(blank=True, help_text='更新人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='u_agv_envchecklocations_related', related_query_name='u_agv_envchecklocationss', to=settings.AUTH_USER_MODEL, verbose_name='更新人')),
                ('working_area', models.ForeignKey(help_text='工作区id', on_delete=django.db.models.deletion.PROTECT, to='basics.workarea', verbose_name='工作区id')),
            ],
            options={
                'verbose_name': '环境检测位置点',
                'verbose_name_plural': '环境检测位置点',
                'db_table': 'env_check_locations',
            },
        ),
        migrations.CreateModel(
            name='EnvCheckTasks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('last_updated_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('delete_time', models.DateTimeField(blank=True, help_text='删除日期', null=True, verbose_name='删除日期')),
                ('delete_flag', models.BooleanField(default=False, help_text='是否删除', verbose_name='是否删除')),
                ('task_no', models.CharField(help_text='任务编号', max_length=256, unique=True, verbose_name='任务编号')),
                ('task_name', models.CharField(help_text='任务名称', max_length=256, unique=True, verbose_name='任务名称')),
                ('task_trigger_type', models.PositiveIntegerField()),
                ('trigger_time', models.JSONField()),
                ('is_used', models.BooleanField(default=True, help_text='是否启用', verbose_name='是否启用')),
                ('created_user', models.ForeignKey(blank=True, help_text='创建人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='c_agv_envchecktasks_related', related_query_name='c_agv_envchecktaskss', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('delete_user', models.ForeignKey(blank=True, help_text='删除人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='d_agv_envchecktasks_related', related_query_name='d_agv_envchecktaskss', to=settings.AUTH_USER_MODEL, verbose_name='删除人')),
                ('last_updated_user', models.ForeignKey(blank=True, help_text='更新人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='u_agv_envchecktasks_related', related_query_name='u_agv_envchecktaskss', to=settings.AUTH_USER_MODEL, verbose_name='更新人')),
            ],
            options={
                'verbose_name': '环境检测任务',
                'verbose_name_plural': '环境检测任务',
                'db_table': 'env_check_tasks',
            },
        ),
        migrations.CreateModel(
            name='EnvIndicators',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indicator_type', models.PositiveIntegerField()),
                ('warning_value', models.FloatField()),
                ('alarm_value', models.FloatField()),
            ],
            options={
                'verbose_name': '环境检测指标点',
                'verbose_name_plural': '环境检测指标点',
                'db_table': 'env_indicators',
            },
        ),
        migrations.CreateModel(
            name='EnvLocationCheckHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_no', models.CharField(max_length=256)),
                ('location_name', models.CharField(max_length=256)),
                ('task_no', models.CharField(max_length=256)),
                ('working_area_name', models.CharField(max_length=256)),
                ('state', models.PositiveIntegerField()),
                ('agv_no', models.CharField(max_length=256)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('report_time', models.DateTimeField(blank=True, null=True)),
                ('indicator_value_1', models.FloatField(blank=True, null=True)),
                ('indicator_value_2', models.FloatField(blank=True, null=True)),
                ('indicator_value_3', models.FloatField(blank=True, null=True)),
                ('indicator_value_4', models.FloatField(blank=True, null=True)),
                ('indicator_value_5', models.FloatField(blank=True, null=True)),
                ('indicator_value_6', models.FloatField(blank=True, null=True)),
                ('indicator_value_7', models.FloatField(blank=True, null=True)),
                ('check_state', models.PositiveIntegerField()),
                ('is_useful', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': '检测点结果报表',
                'verbose_name_plural': '检测点结果报表',
                'db_table': 'env_location_check_history',
            },
        ),
        migrations.CreateModel(
            name='EnvTaskLocationRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordering', models.IntegerField()),
                ('check_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agv.envchecklocations')),
                ('check_task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agv.envchecktasks')),
            ],
            options={
                'verbose_name': '检测任务位置关系表',
                'verbose_name_plural': '检测任务位置关系表',
                'db_table': 'env_task_location_relation',
            },
        ),
        migrations.AddField(
            model_name='envchecktasks',
            name='locations',
            field=models.ManyToManyField(through='agv.EnvTaskLocationRelation', to='agv.EnvCheckLocations'),
        ),
        migrations.AddField(
            model_name='envchecktasks',
            name='working_area',
            field=models.ForeignKey(help_text='工作区id', on_delete=django.db.models.deletion.PROTECT, to='basics.workarea', verbose_name='工作区id'),
        ),
    ]
