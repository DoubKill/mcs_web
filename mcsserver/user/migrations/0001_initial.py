# Generated by Django 3.1 on 2023-07-22 15:26

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import mcs.common_code


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(default='', help_text='手机号', max_length=11, verbose_name='手机号')),
                ('id_card_num', models.CharField(default='', help_text='身份证号码', max_length=18)),
                ('delete_date', models.DateTimeField(blank=True, help_text='删除日期', null=True, verbose_name='删除日期')),
                ('delete_flag', models.BooleanField(default=False, help_text='是否删除', verbose_name='是否删除')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('last_updated_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('created_user', models.ForeignKey(blank=True, help_text='创建人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='c_user_user_related', related_query_name='c_user_users', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('delete_user', models.ForeignKey(blank=True, help_text='删除人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='d_user_user_related', related_query_name='d_user_users', to=settings.AUTH_USER_MODEL, verbose_name='删除人')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
                'db_table': 'user',
            },
            bases=(models.Model, mcs.common_code.UserFunctions),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserOperationLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('operator_user', models.CharField(help_text='操作人', max_length=64)),
                ('operator_type', models.CharField(help_text='操作类型', max_length=64)),
                ('operator_reason', models.CharField(help_text='操作原因', max_length=64)),
                ('operation_desc', models.JSONField(blank=True, help_text='操作描述', null=True)),
            ],
            options={
                'verbose_name': '用户操作履历',
                'verbose_name_plural': '用户操作履历',
                'db_table': 'user_operation_log',
            },
        ),
        migrations.CreateModel(
            name='Permissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='权限代码', max_length=64, unique=True)),
                ('name', models.CharField(help_text='权限名称', max_length=64)),
                ('category_name', models.CharField(blank=True, help_text='所属模块', max_length=16, null=True)),
                ('parent', models.ForeignKey(blank=True, help_text='父节点', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children_permissions', to='user.permissions')),
            ],
            options={
                'verbose_name': '权限',
                'verbose_name_plural': '权限',
                'db_table': 'permissions',
            },
        ),
        migrations.CreateModel(
            name='GroupExtension',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('last_updated_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('delete_time', models.DateTimeField(blank=True, help_text='删除日期', null=True, verbose_name='删除日期')),
                ('delete_flag', models.BooleanField(default=False, help_text='是否删除', verbose_name='是否删除')),
                ('group_code', models.CharField(help_text='角色代码', max_length=50, unique=True, verbose_name='角色代码')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='角色名称')),
                ('is_used', models.BooleanField(default=True, help_text='是否使用', verbose_name='是否使用')),
                ('created_user', models.ForeignKey(blank=True, help_text='创建人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='c_user_groupextension_related', related_query_name='c_user_groupextensions', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('delete_user', models.ForeignKey(blank=True, help_text='删除人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='d_user_groupextension_related', related_query_name='d_user_groupextensions', to=settings.AUTH_USER_MODEL, verbose_name='删除人')),
                ('last_updated_user', models.ForeignKey(blank=True, help_text='更新人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='u_user_groupextension_related', related_query_name='u_user_groupextensions', to=settings.AUTH_USER_MODEL, verbose_name='更新人')),
                ('permissions', models.ManyToManyField(blank=True, help_text='角色权限', to='user.Permissions')),
            ],
            options={
                'verbose_name': '角色',
                'verbose_name_plural': '角色',
                'db_table': 'group_extensions',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('last_updated_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('delete_time', models.DateTimeField(blank=True, help_text='删除日期', null=True, verbose_name='删除日期')),
                ('delete_flag', models.BooleanField(default=False, help_text='是否删除', verbose_name='是否删除')),
                ('name', models.CharField(help_text='部门名称', max_length=30, verbose_name='部门名称')),
                ('created_user', models.ForeignKey(blank=True, help_text='创建人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='c_user_department_related', related_query_name='c_user_departments', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('delete_user', models.ForeignKey(blank=True, help_text='删除人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='d_user_department_related', related_query_name='d_user_departments', to=settings.AUTH_USER_MODEL, verbose_name='删除人')),
                ('in_charge_user', models.ForeignKey(blank=True, help_text='负责人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='in_charge_sections', to=settings.AUTH_USER_MODEL)),
                ('last_updated_user', models.ForeignKey(blank=True, help_text='更新人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='u_user_department_related', related_query_name='u_user_departments', to=settings.AUTH_USER_MODEL, verbose_name='更新人')),
                ('parent_section', models.ForeignKey(blank=True, help_text='父节点部门', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='children_sections', to='user.department')),
            ],
            options={
                'verbose_name': '部门',
                'verbose_name_plural': '部门',
                'db_table': 'department',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='department',
            field=models.ForeignKey(blank=True, help_text='部门', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='section_users', to='user.department', verbose_name='部门'),
        ),
        migrations.AddField(
            model_name='user',
            name='group_extensions',
            field=models.ManyToManyField(help_text='角色', related_name='group_users', to='user.GroupExtension'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='last_updated_user',
            field=models.ForeignKey(blank=True, help_text='更新人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='u_user_user_related', related_query_name='u_user_users', to=settings.AUTH_USER_MODEL, verbose_name='更新人'),
        ),
        migrations.AddField(
            model_name='user',
            name='permissions',
            field=models.ManyToManyField(blank=True, help_text='角色权限', to='user.Permissions'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
